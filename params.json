{"name":"Grappling","tagline":"Grappling is a hacky DSL for working with PagerDuty's webhooks","body":"#What\r\n\r\n_DSL - A domain specific language, where code is written in one language and errors are given in another. --[The Devil's Dictionary of Programming](http://programmingisterrible.com/post/65781074112/devils-dictionary-of-programming)_\r\n\r\nGrappling is a tiny, hacky DSL for inflatable Webhooks for Ruby and [PagerDuty](http://www.pagerduty.com/).  It uses [Sinatra](http://www.sinatrarb.com/), [Resque](https://github.com/resque/resque), and [Bootstrap](http://getbootstrap.com/).  Bring your own Redis install, or just get a free one from [redis to go](http://www.redistogo.com/).\r\n\r\nIt is pretty OK for quick prototypes, one-off servers, and PagerDuty's hack days.\r\n\r\n#Install\r\n\r\n    gem install grappling\r\n\r\n#Example\r\n\r\n    # example.rb\r\n    require 'grappling'\r\n    \r\n    redis_url \"redis://redistogo:password@whatever.redistogo.com:12345/\"\r\n    name \"Grappling Example\"\r\n\r\n    fields do\r\n        textfield :email_address\r\n        choice :color, [:red, :blue, :green]\r\n    end\r\n\r\n    grapple do\r\n        if is_trigger?\r\n        \r\n        end\r\n    end\r\n\r\nThen just run\r\n\r\n    grapple go example.rb\r\n\r\nto start a webserver, and\r\n\r\n    grapple do example.rb\r\n\r\nTo run a queue worker\r\n\r\n#Reference\r\n\r\n##Field Definitions\r\n###textfield\r\n\r\n###select\r\n\r\n\r\n##The Worker\r\n###instance variables\r\n\r\n###is\\_trigger?, is\\_acknowledge?, is\\_resolve?\r\n\r\n###description\r\n\r\n###user\r\n:email, :name\r\n\r\n\r\n##Helper and Configuration Methods\r\n###redis_url\r\n\r\nredis_url configures the URL where Redis is set up, along with authentication details.  e.g. redis://username:password@host:port/.  The username is ignored because Redis doesn't support usernames.\r\n\r\n###name\r\n\r\nThe application's name.  This is what is displayed on the hook creation page.\r\n\r\n###logo\r\n\r\nThe logo file.  This is read into memory at runtime and is served from e.g. /logo.png.  If it is provided, it is displayed on the hook creation page.\r\n\r\n\r\n#Heroku\r\n\r\nSetting up a Grappling application on Heroku is super easy.\r\n\r\n\r\n#Other Random Notes\r\n\r\n##JSON Handling\r\n\r\nPagerDuty collapses a bunch of events into a single Webhook call.  We split them back out and make a task for each message.\r\n\r\n##To rebuild the gem\r\n\r\n    gem build grappling.gemspec\r\n    gem install grappling-[version].gem\r\n\r\n##Use ssh port forwarding to expose your development endpoint\r\n\r\nThis sets up a tunnel so host:8888 forwards to localhost:4567\r\n\r\n    ssh -R *:8888:localhost:4567 username@host\r\n\r\n##Change the default port\r\n\r\nIn development mode, Grappling runs on port 4567 (this is just Sinatra after all).  You can change this, or any other Sinatra option, as follows:\r\n\r\n    set :port, 80","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}